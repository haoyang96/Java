<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 1)相关配置自动扫描的包 -->
	<context:component-scan base-package="com.movie.score.handlers"></context:component-scan>

	<!-- 2)配置视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- default-servlet-handler 将在 SpringMVC 上下文中定义一个 DefaultServletHttpRequestHandler, 
		它会对进入 DispatcherServlet 的请求进行筛查, 如果发现是没有经过映射的请求, 就将该请求交由 WEB 应用服务器默认的 Servlet 
		处理.(也就是TomCat) 如果不是静态资源的请求，才由 DispatcherServlet 继续处理. 如果是静态资源,就直接展示了. 一般 
		WEB应用服务器默认的 Servlet 的名称都是 default. 若所使用的 WEB 服务器的默认 Servlet 名称不是 default，则需要通过 
		default-servlet-name 属性显式指定 -->
	<!-- 3)如果想直接访问静态页面,包括js等,就必须要配置上这句话 ,但是如果只配置这句话,那RequestMapping就不好用了 -->
	<mvc:default-servlet-handler />

	<!-- 4)如果 既想直接访问js等静态页面，又想访问RequestMapping，那就得配置以下这个选项 -->
	<mvc:annotation-driven></mvc:annotation-driven> 
	
	<!-- 5)为了正确处理静态资源，需要配置resources这个元素 -->
	<mvc:resources location="/WebContent/css/" mapping="/WebContent/css/**"/>

</beans>